version: 2

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
       mkdir -p workspace
       git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
       # install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
       python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &conda_rerender
    name: conda_rerender
    command: |
       git clone https://github.com/CDAT/conda-recipes.git $WORKDIR/conda-recipes 
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       RELEASE_INFO="./info/release_info.json"
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       GET_RELEASE_INFO="$WORKDIR/conda-recipes/build_tools/get_release_info.py"
       CDAT_VERSION="8.2"
       if [ -z "$REPO_NAME" ]; then
          REPO_NAME=$PKG_NAME
       fi
       python $GET_RELEASE_INFO -r $CDAT_VERSION -t cdat -p $PKG_NAME -f $RELEASE_INFO > $WORKDIR/pkginfo
       version=`cat $WORKDIR/pkginfo | awk -F: '{ print $1 }'`
       build=`cat $WORKDIR/pkginfo | awk -F: '{ print $2 }'`
       # version is 'last stable version'
       # for nightly, build number is always 0
       python $BUILD_SCRIPT -w $WORKDIR -l $version -B $build -p $PKG_NAME -r $REPO_NAME --do_rerender

  - &conda_build
    name: conda_build
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --add channels conda-forge --force
       conda config --add channels cdat/label/nightly --force
       conda config --set channel_priority strict
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       type=`cat $WORKDIR/pkginfo | awk -F: '{ print $3 }'`
       if [ -z "$REPO_NAME" ]; then
          REPO_NAME=$PKG_NAME
       fi
       if [ $type == 'noarch' ]; then
          python $BUILD_SCRIPT -w $WORKDIR -p $PKG_NAME -r $REPO_NAME --build_version $type --do_build
       else
          python $BUILD_SCRIPT -w $WORKDIR -p $PKG_NAME -r $REPO_NAME --build_version $BUILD_VARIANT_VERSION --do_build
       fi

  - &conda_upload
    name: conda_upload
    environment:
       USER: "cdat"
       LABEL: "nightly"
    command: |
       #if [[ $CIRCLE_BRANCH != "master" ]]; then
       #   exit 0
       #fi
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       UPLOAD_OPTIONS="-t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL"
       version=`cat $WORKDIR/pkginfo | awk -F: '{ print $1 }'`
       if [[ $BUILD_VARIANT_VERSION == 'noarch' ]]; then
          anaconda $UPLOAD_OPTIONS $WORKDIR/miniconda/conda-bld/noarch/$PKG_NAME-$version.`date +%Y*`0.tar.bz2 --force
       else
          py_ver=`echo ${BUILD_VARIANT_VERSION/./}`
          anaconda $UPLOAD_OPTIONS $WORKDIR/miniconda/conda-bld/$ARCH/$PKG_NAME-$version.`date +%Y*`0.tar.bz2 --force
       fi
    no_output_timeout: 30m

  - &install_ninja
    name: install_ninja
    command: |
       git clone git://github.com/ninja-build/ninja.git $WORKDIR/ninja
       cd $WORKDIR/ninja
       git checkout release
       ./configure.py --bootstrap

jobs:

   #
   # vcsaddons
   #
   macos_vcsaddons_rerender:
      macos:
         xcode: "11.3.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_vcsaddons_build
         PKG_NAME: "vcsaddons"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - persist_to_workspace:
              root: .
              paths: 
                 - macos_vcsaddons_build

   macos_vcsaddons_py2:
      macos:
         xcode: "11.3.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_vcsaddons_build
         PKG_NAME: "vcsaddons"
         BUILD_VARIANT_VERSION: "2.7"
         ARCH: "osx-64"
      steps:
         - attach_workspace:
              at: .
         - run: *conda_build
         - run: *conda_upload

   macos_vcsaddons_py37:
      macos:
         xcode: "11.3.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_vcsaddons_build
         PKG_NAME: "vcsaddons"
         BUILD_VARIANT_VERSION: "3.7"
         ARCH: "osx-64"
      steps:
         - attach_workspace:
              at: .
         - run: *conda_build
         - run: *conda_upload

   linux_vcsaddons_rerender:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_vcsaddons_build
         PKG_NAME: "vcsaddons"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - persist_to_workspace:
              root: .
              paths: 
                 - linux_vcsaddons_build

   linux_vcsaddons_py2:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_vcsaddons_build
         PKG_NAME: "vcsaddons"
         BUILD_VARIANT_VERSION: "2.7"
         ARCH: "linux-64"
      steps:
         - attach_workspace:
              at: .
         - run: *conda_build
         - run: *conda_upload

   linux_vcsaddons_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_vcsaddons_build
         PKG_NAME: "vcsaddons"
         BUILD_VARIANT_VERSION: "3.7"
         ARCH: "linux-64"
      steps:
         - attach_workspace:
              at: .
         - run: *conda_build
         - run: *conda_upload

workflows:
   version: 2
   cdat:
      jobs:
         #
         # vcsaddons
         #
         - macos_vcsaddons_rerender
         - macos_vcsaddons_py2:
              requires:
                 - macos_vcsaddons_rerender
         - macos_vcsaddons_py37:
              requires:
                 - macos_vcsaddons_rerender

         - linux_vcsaddons_rerender
         - linux_vcsaddons_py2:
              requires:
                 - linux_vcsaddons_rerender
         - linux_vcsaddons_py37:
              requires:
                 - linux_vcsaddons_rerender
